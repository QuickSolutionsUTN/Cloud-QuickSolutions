-- Instalar python
-- pip install asgiref certifi cloudinary Django django-cors-headers djangorestframework djangorestframework-simplejwt pillow psycopg2 PyJWT six sqlparse tzdata urllib3
-- python manage.py runserver

[12:08 a.Â m., 18/2/2025] Benja Elizalde: l endpoint que tienen que usar es el que esta en appsURL asi:
[12:08 a.Â m., 18/2/2025] Benja Elizalde: path('interaccion/', InteraccionAPIView.as_view(), name='interaccion'),  # ðŸ”¹ INTERACCIÃ“N EXTERNA
[12:08 a.Â m., 18/2/2025] Benja Elizalde: ese endpoint les da dos metodos un post y un get
[12:08 a.Â m., 18/2/2025] Benja Elizalde: # ðŸ”¹ Vista para INTERACCIÃ“N EXTERNA (obtener trabajadores disponibles y crear solicitudes)
class InteraccionAPIView(APIView):
    def get(self, request):
        """Lista los trabajadores disponibles para una nueva solicitud."""
        trabajadores = Trabajador.objects.filter(estadotrabajo="disponible")
        serializer = TrabajadorSerializer(trabajadores, many=True)
        return Response(serializer.data, status=status.HTTP_200_OK)

    def post(self, request):
        """Crea una nueva solicitud verificando que los trabajadores estÃ©n disponibles."""
        trabajadores_ids = request.data.get("idtrabajadores", [])

        # Verificar si los trabajadores seleccionados estÃ¡n disponibles
        trabajadores_disponibles = Trabajador.objects.filter(idtrabajador__in=trabajadores_ids, estadotrabajo="disponible")

        if trabajadores_disponibles.count() != len(trabajadores_ids):
            return Response(
                {"error": "Uno o mÃ¡s trabajadores seleccionados no estÃ¡n disponibles."},
                status=status.HTTP_400_BAD_REQUEST
            )

        serializer = SolicitudSerializer(data=request.data)
        
        if serializer.is_valid():
            solicitud = serializer.save()
            
            # Marcar trabajadores como "ocupados"
            trabajadores_disponibles.update(estadotrabajo="ocupado")

            return Response({
                "message": "Solicitud creada exitosamente",
                "solicitud": SolicitudSerializer(solicitud).data
            }, status=status.HTTP_201_CREATED)
        
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)